/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.femaleblogdata;
import java.awt.List;
import java.io.FileOutputStream;
import java.net.MalformedURLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;

import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.ektorp.CouchDbConnector;
import org.ektorp.CouchDbInstance;
import org.ektorp.http.HttpClient;
import org.ektorp.http.StdHttpClient;
import org.ektorp.impl.StdCouchDbConnector;
import org.ektorp.impl.StdCouchDbInstance;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.ibm.swat.password.ReturnCode;
import com.ibm.swat.password.cwa2;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Hashtable;
import java.util.Properties;
import java.util.Random;

import javax.naming.Context;
import javax.naming.NamingEnumeration;
import javax.naming.directory.InitialDirContext;
import javax.naming.directory.SearchControls;
import javax.swing.JOptionPane;

/**
 *
 * @author KshiteejManojVENDORG
 */
public class FemaleBlogDataDisplay extends javax.swing.JFrame {

    /**
     * Creates new form FemaleBlogDataDisplay
     */
    String userID;
    
    
    
    public FemaleBlogDataDisplay() {
        initComponents();
        
    }
    
    public FemaleBlogDataDisplay(String userID) {
    	this.userID = userID;
    	initComponents();
    	System.out.println(this.userID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromDate = new javax.swing.JTextField();
        toDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("From Date :");

        jLabel2.setText("To Date :");

        fromDate.setText("yyyy-mm-dd");
        fromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromDateActionPerformed(evt);
            }
        });

        toDate.setText("yyyy-mm-dd");

        jButton1.setText("Generate Excel Document");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("RSC Technical Vitality Data Extractor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(146, 146, 146))))
            .addGroup(layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromDateActionPerformed


    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
    	   
        	SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
        	Date fromDate1 = ft.parse(fromDate.getText());
        	Date toDate1 = ft.parse(toDate.getText());
        	Date today1 = new Date();
        	
        	if (fromDate1.after(today1) || toDate1.after(today1)) {
        		JOptionPane.showMessageDialog(null,"Please enter a valid date, something that is before today's date.");
        		//jLabel4.setText("Please enter a valid date, something that is before today's date.");
        	}
        	else {
        	if (fromDate1.before(toDate1)) {
        	
        	
        	HttpClient httpClient = new StdHttpClient.Builder().url("http://momma1.fyre.ibm.com:5984").username("admin").password("admin123").build();
    	   CouchDbInstance dbInstance = new StdCouchDbInstance(httpClient);
    	   CouchDbConnector genderdb = new StdCouchDbConnector("gender",dbInstance);
    	   CouchDbConnector omsformsdb = new StdCouchDbConnector("omsforms",dbInstance);
    	   CouchDbConnector opsformsdb = new StdCouchDbConnector("opsforms",dbInstance);
    	   CouchDbConnector usersearchesdb = new StdCouchDbConnector("tvreportusage",dbInstance);
    	   //System.out.println(db.get(Gender.class, "_design/view1/_view/genderData"));
    	   JsonNode gender = genderdb.get(JsonNode.class, "_design/view1/_view/genderData");
    	   JsonNode omsformsdata = omsformsdb.get(JsonNode.class,"_design/filterdate/_view/datefilter?startkey=%22" +fromDate.getText()+"%22&endkey=%22"+toDate.getText()+"%22");
    	   JsonNode omsformsdatarows = omsformsdata.get("rows");
    	   ObjectMapper mapper = new ObjectMapper();
    	   ArrayList<HashMap<String,HashMap<String,String>>> omsformsList = mapper.convertValue(omsformsdatarows, ArrayList.class);
    	   System.out.println(gender);
    	   JsonNode data = gender.get("rows");
    	   ArrayList<HashMap<String,String>> genderData = mapper.convertValue(data, ArrayList.class);
    	   ArrayList<Post> omsFormsDataList = new ArrayList<Post>();
    	  
    	   JsonNode opsformsdata = opsformsdb.get(JsonNode.class,"_design/filterDate/_view/filterDate?startkey=%22" +fromDate.getText()+"%22&endkey=%22"+toDate.getText()+"%22");
    	   JsonNode opsformsdatarows = opsformsdata.get("rows");
    	   ArrayList<HashMap<String,HashMap<String,String>>> opsformsList = mapper.convertValue(opsformsdatarows, ArrayList.class);
    	   ArrayList<Post> opsFormsDataList = new ArrayList<Post>();
    	   //ArrayList<String> femaleGenderData = new ArrayList<String>();
           UserProfile userDetails = new UserProfile(this.userID,"User Profile",fromDate.getText(),toDate.getText());
           usersearchesdb.create(userDetails);
            
           
    	   for (int j = 0; j < omsformsList.size(); j++) {
    		   HashMap<String,String> omsObject = omsformsList.get(j).get("value");
    		   omsFormsDataList.add(new Post(omsObject.get("title"),omsObject.get("type"),omsObject.get("date"),omsObject.get("fteam"),omsObject.get("name"),omsObject.get("description"),omsObject.get("point"),omsObject.get("userid"),omsObject.get("username"),"Vikram"));
        		   
        	   }
    		   /*for (int i = 0; i < femaleGenderData.size(); i++) {
        		   if (omsObject.get("userid").equals(femaleGenderData.get(i))) {
        			   //System.out.println(omsObject);
        			   omsFormsDataList.add(new Post(omsObject.get("title"),omsObject.get("type"),omsObject.get("date"),omsObject.get("fteam"),omsObject.get("name"),omsObject.get("description"),omsObject.get("point"),omsObject.get("userid"),omsObject.get("username"),"Vikram"));
        		   }
        	   } */
    	   
    	   
    	   
    	   for (int j = 0; j < opsformsList.size(); j++) {
    		   HashMap<String,String> opsObject = opsformsList.get(j).get("value");
    		   opsFormsDataList.add(new Post(opsObject.get("title"),opsObject.get("type"),opsObject.get("date"),opsObject.get("fteam"),opsObject.get("name"),opsObject.get("description"),opsObject.get("point"),opsObject.get("userid"),opsObject.get("username"),"Siva"));
        		   
        	   
    		   /*for (int i = 0; i < femaleGenderData.size(); i++) {
        		   if (opsObject.get("userid").equals(femaleGenderData.get(i))) {
        			   //System.out.println(opsObject);
        			   opsFormsDataList.add(new Post(opsObject.get("title"),opsObject.get("type"),opsObject.get("date"),opsObject.get("fteam"),opsObject.get("name"),opsObject.get("description"),opsObject.get("point"),opsObject.get("userid"),opsObject.get("username"),"Shiva"));
        		   }
        	   } */
    	   }
    	   
    	   
    	   String[] columns = {"Employee Name","IBM Intranet ID","Program Director","Technical Vitality Category","Technical Vitality Desciption","Details","Functional Vitality Subcategory","Point","Date","Functional Team"};
    	   Workbook workbook = new XSSFWorkbook();
    	   org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Data");
    	   
    	   Font headerFont = workbook.createFont();
    	    headerFont.setBold(true);
    	    headerFont.setFontHeightInPoints((short) 14);

    	    CellStyle headerCellStyle = workbook.createCellStyle();
    	    headerCellStyle.setFont(headerFont);

    	    // Create a Row
    	    Row headerRow = sheet.createRow(0);

    	    int rowNum = 1;

    	    for (Post object : omsFormsDataList) {
    	      
    	      String splitDate [] = object.getDate().split("T");
    	      Row row = sheet.createRow(rowNum++);
    	      row.createCell(0).setCellValue(object.getUsername());
    	      row.createCell(1).setCellValue(object.getUserid());
    	      row.createCell(2).setCellValue(object.getProgramDirector());
    	      row.createCell(3).setCellValue(object.getType());
    	      row.createCell(4).setCellValue(object.getTitle());
    	      row.createCell(5).setCellValue(object.getDescription());
    	      row.createCell(6).setCellValue(object.getName());
    	      row.createCell(7).setCellValue(object.getPoint());
    	      row.createCell(8).setCellValue(splitDate[0]);
    	      row.createCell(9).setCellValue(object.getFteam());
    	    }
 
    	    for (Post object : opsFormsDataList) {
      	      String splitDate [] = object.getDate().split("T");
      	      Row row = sheet.createRow(rowNum++);
      	      row.createCell(0).setCellValue(object.getUsername());
      	      row.createCell(1).setCellValue(object.getUserid());
      	      row.createCell(2).setCellValue(object.getProgramDirector());
      	      row.createCell(3).setCellValue(object.getType());
      	      row.createCell(4).setCellValue(object.getTitle());
      	      row.createCell(5).setCellValue(object.getDescription());
      	      row.createCell(6).setCellValue(object.getName());
      	      row.createCell(7).setCellValue(object.getPoint());
      	      row.createCell(8).setCellValue(splitDate[0]);
      	      row.createCell(9).setCellValue(object.getFteam());
      	    }

    	    
    	    for (int i = 0; i < columns.length; i++) {
    	      Cell cell = headerRow.createCell(i);
    	      cell.setCellValue(columns[i]);
    	      cell.setCellStyle(headerCellStyle);
    	    }
    	    
    	    for (int i = 0; i < columns.length; i++) {
    	        sheet.autoSizeColumn(i);
    	    }
    	    Date today = new Date();
    	    
    	    FileOutputStream fileOut = new FileOutputStream(System.getProperty("user.home") + "\\RSC-Shakti-TechVitality_"+ft.format(today) +".xlsx");
    	    
            workbook.write(fileOut);
    	    fileOut.close();
            JOptionPane.showMessageDialog(null,"Report RSC-Shakti-TechVitality_"+ft.format(today)+".xlsx generated @ C:\\Users\\" + System.getProperty("user.name"));
    	    //jLabel4.setText("Report RSC-Shakti-TechVitality_"+ft.format(today)+".xlsx generated @ C:\\Users\\" + System.getProperty("user.name"));
        	}
        	else {
        		JOptionPane.showMessageDialog(null,"From Date should be before To Date.");
        		//jLabel4.setText("From Date should be before To Date");
        	}
        	}
        	
       }
       catch (java.text.ParseException e1) {
    	   JOptionPane.showMessageDialog(null,"Please enter date in yyyy-mm-dd format.");
    	   //jLabel4.setText("Please enter date in yyyy-mm-dd format.");
       }
       catch (org.ektorp.DbAccessException e) {
    	   JOptionPane.showMessageDialog(null,"ERR: Could not generate report, do BSO for momma1.fyre.ibm.com");
    	   //jLabel4.setText("ERR: Could not generate report, do BSO for momma1.fyre.ibm.com");
           e.printStackTrace();
       }
       catch (Exception e) {
    	   e.printStackTrace();
       }




        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FemaleBlogDataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FemaleBlogDataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FemaleBlogDataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FemaleBlogDataDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FemaleBlogDataDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fromDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField toDate;
    // End of variables declaration//GEN-END:variables
}
